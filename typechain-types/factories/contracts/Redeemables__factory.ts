/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Redeemables,
  RedeemablesInterface,
} from "../../contracts/Redeemables";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "redeemableId",
        type: "uint256",
      },
    ],
    name: "RedeemableCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "redeemableId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "TokenRedeemed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "redeemableAt",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerMint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "redeemedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct Redeemables.Redeemable",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRedeemables",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061033f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063691ebfb71461003b578063c13e33f314610064575b600080fd5b61004e6100493660046101e6565b61007a565b60405161005b919061024c565b60405180910390f35b61006c6101d6565b60405190815260200161005b565b6100ce60405180610120016040528060608152602001600081526020016000815260200160008152602001600081526020016000815260200160008019168152602001600015158152602001600081525090565b60008281526034602052604090819020815161012081019092528054829082906100f7906102cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610123906102cf565b80156101705780601f1061014557610100808354040283529160200191610170565b820191906000526020600020905b81548152906001019060200180831161015357829003601f168201915b505050918352505060018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460ff16151560e08201526008909101546101009091015292915050565b60006101e160335490565b905090565b6000602082840312156101f857600080fd5b5035919050565b6000815180845260005b8181101561022557602081850181015186830182015201610209565b81811115610237576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825161012080602085015261026b6101408501836101ff565b9150602085015160408501526040850151606085015260608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e08501516101006102be8187018315159052565b959095015193019290925250919050565b600181811c908216806102e357607f821691505b60208210810361030357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201b9f547ead4a942fcc2f58a0187fcab026ae00cdd9f03f347ac23f1152782bec64736f6c634300080f0033";

type RedeemablesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedeemablesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Redeemables__factory extends ContractFactory {
  constructor(...args: RedeemablesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Redeemables> {
    return super.deploy(overrides || {}) as Promise<Redeemables>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Redeemables {
    return super.attach(address) as Redeemables;
  }
  override connect(signer: Signer): Redeemables__factory {
    return super.connect(signer) as Redeemables__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeemablesInterface {
    return new utils.Interface(_abi) as RedeemablesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Redeemables {
    return new Contract(address, _abi, signerOrProvider) as Redeemables;
  }
}
