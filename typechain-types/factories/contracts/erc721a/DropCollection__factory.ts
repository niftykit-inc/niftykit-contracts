/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DropCollection,
  DropCollectionInterface,
} from "../../../contracts/erc721a/DropCollection";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "quantities",
        type: "uint64[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
    ],
    name: "batchAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721AUpgradeable.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721AUpgradeable.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "treasury_",
        type: "address",
      },
      {
        internalType: "address",
        name: "royalty_",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "royaltyFee_",
        type: "uint96",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "quantity",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "quantity",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "allowed",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "presaleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxPerMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "presale",
        type: "bool",
      },
    ],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRevenue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260d2805461ffff1916905534801561001b57600080fd5b5061363c8061002b6000396000f3fe6080604052600436106102515760003560e01c806370a0823111610139578063afef7c04116100b6578063d53ab5011161007a578063d53ab501146106dc578063e36b0b37146106fc578063e985e9c514610711578063f0f4426014610731578063f2fde38b14610751578063fb9d09c81461077157600080fd5b8063afef7c041461063a578063b88d4fde1461065a578063bf2d9e0b1461067a578063c23dc68f1461068f578063c87b56dd146106bc57600080fd5b80638da5cb5b116100fd5780638da5cb5b146105b257806395d89b41146105d057806399a2557a146105e5578063a035b1fe14610605578063a22cb4651461061a57600080fd5b806370a0823114610510578063715018a614610530578063789e3a55146105455780637cb64759146105655780638462151c1461058557600080fd5b806342842e0e116101d25780635944c753116101965780635944c753146104535780635bbb2177146104735780635f48f393146104a057806361d027b3146104b55780636352211e146104d357806368428a1b146104f357600080fd5b806342842e0e146103d1578063453c2310146103f1578063507e094f1461040657806353135ca01461041b57806355f804b31461043357600080fd5b806318160ddd1161021957806318160ddd1461032757806323b872dd1461034a5780632a55205a1461036a578063386bacdc146103a95780633ccfd60b146103bc57600080fd5b806301ffc9a71461025657806304634d8d1461028b57806306fdde03146102ad578063081812fc146102cf578063095ea7b314610307575b600080fd5b34801561026257600080fd5b50610276610271366004612a18565b610784565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102ab6102a6366004612a63565b6107af565b005b3480156102b957600080fd5b506102c26107f0565b6040516102829190612aee565b3480156102db57600080fd5b506102ef6102ea366004612b01565b61088b565b6040516001600160a01b039091168152602001610282565b34801561031357600080fd5b506102ab610322366004612b1a565b6108d8565b34801561033357600080fd5b5061033c610986565b604051908152602001610282565b34801561035657600080fd5b506102ab610365366004612b44565b6109a6565b34801561037657600080fd5b5061038a610385366004612b80565b610b9d565b604080516001600160a01b039093168352602083019190915201610282565b6102ab6103b7366004612bfd565b610c4b565b3480156103c857600080fd5b506102ab610f2d565b3480156103dd57600080fd5b506102ab6103ec366004612b44565b61106f565b3480156103fd57600080fd5b5060d05461033c565b34801561041257600080fd5b5060cf5461033c565b34801561042757600080fd5b5060d25460ff16610276565b34801561043f57600080fd5b506102ab61044e366004612d13565b61108f565b34801561045f57600080fd5b506102ab61046e366004612d47565b6110c5565b34801561047f57600080fd5b5061049361048e366004612d83565b6110fa565b6040516102829190612e64565b3480156104ac57600080fd5b5060ce5461033c565b3480156104c157600080fd5b5060ca546001600160a01b03166102ef565b3480156104df57600080fd5b506102ef6104ee366004612b01565b6111c7565b3480156104ff57600080fd5b5060d254610100900460ff16610276565b34801561051c57600080fd5b5061033c61052b366004612ea6565b6111d2565b34801561053c57600080fd5b506102ab61123a565b34801561055157600080fd5b506102ab610560366004612ed1565b611270565b34801561057157600080fd5b506102ab610580366004612b01565b6112c6565b34801561059157600080fd5b506105a56105a0366004612ea6565b6112f5565b6040516102829190612f1a565b3480156105be57600080fd5b506033546001600160a01b03166102ef565b3480156105dc57600080fd5b506102c26113fd565b3480156105f157600080fd5b506105a5610600366004612f52565b611415565b34801561061157600080fd5b5060d15461033c565b34801561062657600080fd5b506102ab610635366004612f85565b61159b565b34801561064657600080fd5b506102ab610655366004612faf565b611641565b34801561066657600080fd5b506102ab610675366004613038565b6117d6565b34801561068657600080fd5b5060cb5461033c565b34801561069b57600080fd5b506106af6106aa366004612b01565b611820565b60405161028291906130b3565b3480156106c857600080fd5b506102c26106d7366004612b01565b6118ad565b3480156106e857600080fd5b506102ab6106f73660046130c1565b611930565b34801561070857600080fd5b506102ab6119fd565b34801561071d57600080fd5b5061027661072c366004613120565b611a34565b34801561073d57600080fd5b506102ab61074c366004612ea6565b611a71565b34801561075d57600080fd5b506102ab61076c366004612ea6565b611abd565b6102ab61077f36600461314a565b611ac9565b60006001600160e01b03198216635d129f8f60e01b14806107a957506107a982611caa565b92915050565b6033546001600160a01b031633146107e25760405162461bcd60e51b81526004016107d990613165565b60405180910390fd5b6107ec8282611cf8565b5050565b60606107fa611db2565b60020180546108089061319a565b80601f01602080910402602001604051908101604052809291908181526020018280546108349061319a565b80156108815780601f1061085657610100808354040283529160200191610881565b820191906000526020600020905b81548152906001019060200180831161086457829003601f168201915b5050505050905090565b600061089682611dd6565b6108b3576040516333d1c03960e21b815260040160405180910390fd5b6108bb611db2565b60009283526006016020525060409020546001600160a01b031690565b60006108e3826111c7565b9050336001600160a01b0382161461091c576108ff8133611a34565b61091c576040516367d9dca160e11b815260040160405180910390fd5b82610925611db2565b6000848152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551849286811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b60006001610992611db2565b6001015461099e611db2565b540303919050565b60006109b182611e1f565b9050836001600160a01b0316816001600160a01b0316146109e45760405162a1148160e81b815260040160405180910390fd5b6000806109f084611eb3565b91509150610a158187610a003390565b6001600160a01b039081169116811491141790565b610a4057610a238633611a34565b610a4057604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610a6757604051633a954ecd60e21b815260040160405180910390fd5b8015610a7257600082555b610a7a611db2565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610aa6611db2565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610add611db2565b60008681526004919091016020526040812091909155600160e11b84169003610b535760018401610b0c611db2565b600082815260049190910160205260408120549003610b5157610b2d611db2565b548114610b515783610b3d611db2565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b60008281526098602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610c125750604080518082019091526097546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610c31906001600160601b0316876131ea565b610c3b9190613209565b91519350909150505b9250929050565b836000816001600160401b031611610c965760405162461bcd60e51b815260206004820152600e60248201526d047726561746572207468616e20360941b60448201526064016107d9565b60d05481610ca333611edb565b610cad919061322b565b6001600160401b03161115610cd45760405162461bcd60e51b81526004016107d990613256565b600060ce5411610ce5576001610d06565b60ce54610d03826001600160401b0316610cfd610986565b90611f0e565b11155b610d485760405162461bcd60e51b81526020600482015260136024820152724578636565646564206d617820737570706c7960681b60448201526064016107d9565b60cf54816001600160401b03161115610d9b5760405162461bcd60e51b8152602060048201526015602482015274115e18d959591959081b585e081c195c881b5a5b9d605a1b60448201526064016107d9565b60d25460ff16610de25760405162461bcd60e51b815260206004820152601260248201527150726573616c65206e6f742061637469766560701b60448201526064016107d9565b60cc54600003610e265760405162461bcd60e51b815260206004820152600f60248201526e141c995cd85b19481b9bdd081cd95d608a1b60448201526064016107d9565b8385610e3133611edb565b610e3b919061322b565b6001600160401b03161115610e625760405162461bcd60e51b81526004016107d990613256565b610ede8383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060cc546040516bffffffffffffffffffffffff193360601b166020820152603481018a9052909250605401905060405160208183030381529060405280519060200120611f1a565b610f1c5760405162461bcd60e51b815260206004820152600f60248201526e141c995cd85b19481a5b9d985b1a59608a1b60448201526064016107d9565b610f268533611f30565b5050505050565b60004711610f695760405162461bcd60e51b8152602060048201526009602482015268302062616c616e636560b81b60448201526064016107d9565b60c954604051639af608c960e01b815230600482015247916000916001600160a01b0390911690639af608c990602401602060405180830381865afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda919061328d565b60c95460405163b9bff4bb60e01b8152600481018390529192506001600160a01b03169063b9bff4bb90602401600060405180830381600087803b15801561102157600080fd5b505af1158015611035573d6000803e3d6000fd5b505060c95461105092506001600160a01b031690508261207c565b60ca546107ec906001600160a01b031661106a8484612195565b61207c565b61108a838383604051806020016040528060008152506117d6565b505050565b6033546001600160a01b031633146110b95760405162461bcd60e51b81526004016107d990613165565b60cd6107ec82826132ec565b6033546001600160a01b031633146110ef5760405162461bcd60e51b81526004016107d990613165565b61108a8383836121a1565b80516060906000816001600160401b0381111561111957611119612c56565b60405190808252806020026020018201604052801561116b57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816111375790505b50905060005b8281146111bf5761119a85828151811061118d5761118d6133ab565b6020026020010151611820565b8282815181106111ac576111ac6133ab565b6020908102919091010152600101611171565b509392505050565b60006107a982611e1f565b60006001600160a01b0382166111fb576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b0361120b611db2565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6033546001600160a01b031633146112645760405162461bcd60e51b81526004016107d990613165565b61126e600061226c565b565b6033546001600160a01b0316331461129a5760405162461bcd60e51b81526004016107d990613165565b60d2805491151561ffff199092169190911761010017905560ce9390935560cf9190915560d05560d155565b6033546001600160a01b031633146112f05760405162461bcd60e51b81526004016107d990613165565b60cc55565b60606000806000611305856111d2565b90506000816001600160401b0381111561132157611321612c56565b60405190808252806020026020018201604052801561134a578160200160208202803683370190505b50905061137760408051608081018252600080825260208201819052918101829052606081019190915290565b60015b8386146113f15761138a816122be565b915081604001516113e95781516001600160a01b0316156113aa57815194505b876001600160a01b0316856001600160a01b0316036113e957808387806001019850815181106113dc576113dc6133ab565b6020026020010181815250505b60010161137a565b50909695505050505050565b6060611407611db2565b60030180546108089061319a565b606081831061143757604051631960ccad60e11b815260040160405180910390fd5b600080611442612305565b9050600185101561145257600194505b8084111561145e578093505b6000611469876111d2565b9050848610156114885785850381811015611482578091505b5061148c565b5060005b6000816001600160401b038111156114a6576114a6612c56565b6040519080825280602002602001820160405280156114cf578160200160208202803683370190505b509050816000036114e557935061159492505050565b60006114f088611820565b905060008160400151611501575080515b885b8881141580156115135750848714155b1561158857611521816122be565b925082604001516115805782516001600160a01b03161561154157825191505b8a6001600160a01b0316826001600160a01b0316036115805780848880600101995081518110611573576115736133ab565b6020026020010181815250505b600101611503565b50505092835250909150505b9392505050565b336001600160a01b038316036115c45760405163b06307db60e01b815260040160405180910390fd5b806115cd611db2565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000805160206135e783398151915254610100900460ff16611676576000805160206135e78339815191525460ff161561167a565b303b155b6116ec5760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e747261637460448201527f20697320616c726561647920696e697469616c697a656400000000000000000060648201526084016107d9565b6000805160206135e783398151915254610100900460ff16158015611728576000805160206135e7833981519152805461ffff19166101011790555b60006117346001612315565b9050801561174c576000805461ff0019166101001790555b61175687876123a2565b61175e6123e0565b61176985858561241c565b80156117af576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b508015610b955750506000805160206135e7833981519152805461ff001916905550505050565b6117e18484846109a6565b6001600160a01b0383163b1561181a576117fd84848484612486565b61181a576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b604080516080810182526000808252602082018190529181018290526060810191909152604080516080810182526000808252602082018190529181018290526060810191909152600183108061187e575061187a612305565b8310155b156118895792915050565b611892836122be565b90508060400151156118a45792915050565b61159483612572565b60606118b882611dd6565b6118d557604051630a14c4b560e41b815260040160405180910390fd5b60006118df6125a7565b905080516000036118ff5760405180602001604052806000815250611594565b80611909846125b6565b60405160200161191a9291906133c1565b6040516020818303038152906040529392505050565b6033546001600160a01b0316331461195a5760405162461bcd60e51b81526004016107d990613165565b82811461196657600080fd5b60005b6001600160401b038116821115610f26576119eb8383836001600160401b0316818110611998576119986133ab565b90506020020160208101906119ad9190612ea6565b8686846001600160401b03168181106119c8576119c86133ab565b90506020020160208101906119dd919061314a565b6001600160401b0316612605565b806119f5816133e7565b915050611969565b6033546001600160a01b03163314611a275760405162461bcd60e51b81526004016107d990613165565b60d2805461ffff19169055565b6000611a3e611db2565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6033546001600160a01b03163314611a9b5760405162461bcd60e51b81526004016107d990613165565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b611ac681612715565b50565b806000816001600160401b031611611b145760405162461bcd60e51b815260206004820152600e60248201526d047726561746572207468616e20360941b60448201526064016107d9565b60d05481611b2133611edb565b611b2b919061322b565b6001600160401b03161115611b525760405162461bcd60e51b81526004016107d990613256565b600060ce5411611b63576001611b7e565b60ce54611b7b826001600160401b0316610cfd610986565b11155b611bc05760405162461bcd60e51b81526020600482015260136024820152724578636565646564206d617820737570706c7960681b60448201526064016107d9565b60cf54816001600160401b03161115611c135760405162461bcd60e51b8152602060048201526015602482015274115e18d959591959081b585e081c195c881b5a5b9d605a1b60448201526064016107d9565b60d25460ff1615611c575760405162461bcd60e51b815260206004820152600e60248201526d50726573616c652061637469766560901b60448201526064016107d9565b60d254610100900460ff16611ca05760405162461bcd60e51b815260206004820152600f60248201526e53616c65206e6f742061637469766560881b60448201526064016107d9565b6107ec8233611f30565b60006301ffc9a760e01b6001600160e01b031983161480611cdb57506380ac58cd60e01b6001600160e01b03198316145b806107a95750506001600160e01b031916635b5e139f60e01b1490565b6127106001600160601b0382161115611d235760405162461bcd60e51b81526004016107d99061340d565b6001600160a01b038216611d795760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c69642072656365697665720000000000000060448201526064016107d9565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217609755565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b600081600111158015611df05750611dec611db2565b5482105b80156107a95750600160e01b611e04611db2565b60008481526004919091016020526040902054161592915050565b60008180600111611e9a57611e32611db2565b54811015611e9a576000611e44611db2565b600083815260049190910160205260408120549150600160e01b82169003611e98575b8060000361159457611e77611db2565b60001990920160008181526004939093016020526040909220549050611e67565b505b604051636f96cda160e11b815260040160405180910390fd5b6000806000611ec0611db2565b60009485526006016020525050604090912080549092909150565b600060c0611ee7611db2565b6001600160a01b03909316600090815260059390930160205260409092205490911c919050565b60006115948284613457565b600082611f2785846127ad565b14949350505050565b6000826001600160401b031611611f825760405162461bcd60e51b81526020600482015260166024820152754d7573742062652067726561746572207468616e203160501b60448201526064016107d9565b60d1543490611f9a906001600160401b038516612819565b1115611fda5760405162461bcd60e51b815260206004820152600f60248201526e15985b1d59481a5b98dbdc9c9958dd608a1b60448201526064016107d9565b60cb54611fe79034611f0e565b60cb55600082611ff633611edb565b612000919061322b565b905061200c3382612825565b60c95460405163107e9cf160e01b81523460048201526001600160a01b039091169063107e9cf190602401600060405180830381600087803b15801561205157600080fd5b505af1158015612065573d6000803e3d6000fd5b5050505061108a82846001600160401b0316612605565b804710156120cc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016107d9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612119576040519150601f19603f3d011682016040523d82523d6000602084013e61211e565b606091505b505090508061108a5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107d9565b6000611594828461346f565b6127106001600160601b03821611156121cc5760405162461bcd60e51b81526004016107d99061340d565b6001600160a01b0382166122225760405162461bcd60e51b815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d6574657273000000000060448201526064016107d9565b6040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752609890529190942093519051909116600160a01b029116179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805160808101825260008082526020820181905291810182905260608101919091526107a96122ed611db2565b6000848152600491909101602052604090205461288e565b600061230f611db2565b54919050565b60008054610100900460ff161561235c578160ff1660011480156123385750303b155b6123545760405162461bcd60e51b81526004016107d990613486565b506000919050565b60005460ff8084169116106123835760405162461bcd60e51b81526004016107d990613486565b506000805460ff191660ff92909216919091179055600190565b919050565b6000805160206135e783398151915254610100900460ff166123d65760405162461bcd60e51b81526004016107d9906134d4565b6107ec82826128d5565b6000805160206135e783398151915254610100900460ff166124145760405162461bcd60e51b81526004016107d9906134d4565b61126e612948565b600054610100900460ff166124435760405162461bcd60e51b81526004016107d990613528565b61244b61297c565b6124536129ab565b60c98054336001600160a01b03199182161790915560ca80549091166001600160a01b03851617905561108a8282611cf8565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906124bb903390899088908890600401613573565b6020604051808303816000875af19250505080156124f6575060408051601f3d908101601f191682019092526124f3918101906135b0565b60015b612554573d808015612524576040519150601f19603f3d011682016040523d82523d6000602084013e612529565b606091505b50805160000361254c576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6040805160808101825260008082526020820181905291810182905260608101919091526107a96125a283611e1f565b61288e565b606060cd80546108089061319a565b604080516080810191829052607f0190826030600a8206018353600a90045b80156125f357600183039250600a81066030018353600a90046125d5565b50819003601f19909101908152919050565b600061260f611db2565b5490506001600160a01b03831661263857604051622e076360e81b815260040160405180910390fd5b816000036126595760405163b562e8dd60e01b815260040160405180910390fd5b68010000000000000001820261266d611db2565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b17176126a8611db2565b60008381526004919091016020526040902055808281015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106126c0578061270c611db2565b555061108a9050565b6033546001600160a01b0316331461273f5760405162461bcd60e51b81526004016107d990613165565b6001600160a01b0381166127a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107d9565b611ac68161226c565b600081815b84518110156111bf5760008582815181106127cf576127cf6133ab565b602002602001015190508083116127f55760008381526020829052604090209250612806565b600081815260208490526040902092505b5080612811816135cd565b9150506127b2565b600061159482846131ea565b600061282f611db2565b6001600160a01b038416600090815260059190910160205260409020546001600160c01b031660c083901b1790508181612867611db2565b6001600160a01b039095166000908152600595909501602052604090942093909355505050565b604080516080810182526001600160a01b038316815260a083901c6001600160401b03166020820152600160e01b831615159181019190915260e89190911c606082015290565b6000805160206135e783398151915254610100900460ff166129095760405162461bcd60e51b81526004016107d9906134d4565b81612912611db2565b6002019061292090826132ec565b508061292a611db2565b6003019061293890826132ec565b506001612943611db2565b555050565b6000805160206135e783398151915254610100900460ff1661126e5760405162461bcd60e51b81526004016107d9906134d4565b600054610100900460ff166129a35760405162461bcd60e51b81526004016107d990613528565b61126e6129d2565b600054610100900460ff1661126e5760405162461bcd60e51b81526004016107d990613528565b600054610100900460ff166129f95760405162461bcd60e51b81526004016107d990613528565b61126e3361226c565b6001600160e01b031981168114611ac657600080fd5b600060208284031215612a2a57600080fd5b813561159481612a02565b80356001600160a01b038116811461239d57600080fd5b80356001600160601b038116811461239d57600080fd5b60008060408385031215612a7657600080fd5b612a7f83612a35565b9150612a8d60208401612a4c565b90509250929050565b60005b83811015612ab1578181015183820152602001612a99565b8381111561181a5750506000910152565b60008151808452612ada816020860160208601612a96565b601f01601f19169290920160200192915050565b6020815260006115946020830184612ac2565b600060208284031215612b1357600080fd5b5035919050565b60008060408385031215612b2d57600080fd5b612b3683612a35565b946020939093013593505050565b600080600060608486031215612b5957600080fd5b612b6284612a35565b9250612b7060208501612a35565b9150604084013590509250925092565b60008060408385031215612b9357600080fd5b50508035926020909101359150565b80356001600160401b038116811461239d57600080fd5b60008083601f840112612bcb57600080fd5b5081356001600160401b03811115612be257600080fd5b6020830191508360208260051b8501011115610c4457600080fd5b60008060008060608587031215612c1357600080fd5b612c1c85612ba2565b93506020850135925060408501356001600160401b03811115612c3e57600080fd5b612c4a87828801612bb9565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612c9457612c94612c56565b604052919050565b60006001600160401b03831115612cb557612cb5612c56565b612cc8601f8401601f1916602001612c6c565b9050828152838383011115612cdc57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612d0457600080fd5b61159483833560208501612c9c565b600060208284031215612d2557600080fd5b81356001600160401b03811115612d3b57600080fd5b61256a84828501612cf3565b600080600060608486031215612d5c57600080fd5b83359250612d6c60208501612a35565b9150612d7a60408501612a4c565b90509250925092565b60006020808385031215612d9657600080fd5b82356001600160401b0380821115612dad57600080fd5b818501915085601f830112612dc157600080fd5b813581811115612dd357612dd3612c56565b8060051b9150612de4848301612c6c565b8181529183018401918481019088841115612dfe57600080fd5b938501935b83851015612e1c57843582529385019390850190612e03565b98975050505050505050565b80516001600160a01b031682526020808201516001600160401b03169083015260408082015115159083015260609081015162ffffff16910152565b6020808252825182820181905260009190848201906040850190845b818110156113f157612e93838551612e28565b9284019260809290920191600101612e80565b600060208284031215612eb857600080fd5b61159482612a35565b8035801515811461239d57600080fd5b600080600080600060a08688031215612ee957600080fd5b85359450602086013593506040860135925060608601359150612f0e60808701612ec1565b90509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156113f157835183529284019291840191600101612f36565b600080600060608486031215612f6757600080fd5b612f7084612a35565b95602085013595506040909401359392505050565b60008060408385031215612f9857600080fd5b612fa183612a35565b9150612a8d60208401612ec1565b600080600080600060a08688031215612fc757600080fd5b85356001600160401b0380821115612fde57600080fd5b612fea89838a01612cf3565b9650602088013591508082111561300057600080fd5b5061300d88828901612cf3565b94505061301c60408701612a35565b925061302a60608701612a35565b9150612f0e60808701612a4c565b6000806000806080858703121561304e57600080fd5b61305785612a35565b935061306560208601612a35565b92506040850135915060608501356001600160401b0381111561308757600080fd5b8501601f8101871361309857600080fd5b6130a787823560208401612c9c565b91505092959194509250565b608081016107a98284612e28565b600080600080604085870312156130d757600080fd5b84356001600160401b03808211156130ee57600080fd5b6130fa88838901612bb9565b9096509450602087013591508082111561311357600080fd5b50612c4a87828801612bb9565b6000806040838503121561313357600080fd5b61313c83612a35565b9150612a8d60208401612a35565b60006020828403121561315c57600080fd5b61159482612ba2565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806131ae57607f821691505b6020821081036131ce57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613204576132046131d4565b500290565b60008261322657634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160401b0380831681851680830382111561324d5761324d6131d4565b01949350505050565b60208082526017908201527f4578636565646564206d6178207065722077616c6c6574000000000000000000604082015260600190565b60006020828403121561329f57600080fd5b5051919050565b601f82111561108a57600081815260208120601f850160051c810160208610156132cd5750805b601f850160051c820191505b81811015610b95578281556001016132d9565b81516001600160401b0381111561330557613305612c56565b61331981613313845461319a565b846132a6565b602080601f83116001811461334e57600084156133365750858301515b600019600386901b1c1916600185901b178555610b95565b600085815260208120601f198616915b8281101561337d5788860151825594840194600190910190840161335e565b508582101561339b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600083516133d3818460208801612a96565b83519083019061324d818360208801612a96565b60006001600160401b03808316818103613403576134036131d4565b6001019392505050565b6020808252602a908201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646040820152692073616c65507269636560b01b606082015260800190565b6000821982111561346a5761346a6131d4565b500190565b600082821015613481576134816131d4565b500390565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906135a690830184612ac2565b9695505050505050565b6000602082840312156135c257600080fd5b815161159481612a02565b6000600182016135df576135df6131d4565b506001019056feee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85fa2646970667358221220ff014535eaae100d76f0ab63b12b2822332fa6ec62364f6e3cf8c41e2ff7529164736f6c634300080f0033";

type DropCollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropCollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropCollection__factory extends ContractFactory {
  constructor(...args: DropCollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DropCollection> {
    return super.deploy(overrides || {}) as Promise<DropCollection>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropCollection {
    return super.attach(address) as DropCollection;
  }
  override connect(signer: Signer): DropCollection__factory {
    return super.connect(signer) as DropCollection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropCollectionInterface {
    return new utils.Interface(_abi) as DropCollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropCollection {
    return new Contract(address, _abi, signerOrProvider) as DropCollection;
  }
}
