/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDropKitPass,
  IDropKitPassInterface,
} from "../../../contracts/interfaces/IDropKitPass";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint96[]",
        name: "feeRates",
        type: "uint96[]",
      },
    ],
    name: "batchAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFeeRate",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getFeeRateOf",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "royalty",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "royaltyFee",
        type: "uint96",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeRate",
        type: "uint96",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDropKitPass__factory {
  static readonly abi = _abi;
  static createInterface(): IDropKitPassInterface {
    return new utils.Interface(_abi) as IDropKitPassInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDropKitPass {
    return new Contract(address, _abi, signerOrProvider) as IDropKitPass;
  }
}
